name: Solution Infra Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        options:
        - awseks/us-east-1

permissions:
      id-token: write
      contents: read
env:
  TF_LOG: INFO

jobs:
  plan:
    name: plan
    runs-on: ubuntu-latest
    environment: 'default'

    steps: 
      - name: checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract Region from Input
        id: extract-region
        run: |
          IFS='/' read -ra ADDR <<< "${{ inputs.environment }}"
          echo "Region=${ADDR[-1]}" >> $GITHUB_ENV

      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ env.Region }}
          role-to-assume: ${{ secrets.AWS_ROLE}}

      - name: Set Terraform Module Path
        id: set-module-path
        run: |
          IFS='/' read -r -a array <<< "${{ github.event.inputs.environment }}"
          module_path="${{ github.event.inputs.environment }}"
          echo "module_path=$module_path" >> $GITHUB_ENV
          cd $module_path

      - name: Terraform Format
        run: terraform fmt 
        continue-on-error: true

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate


      - name: Terraform Plan
        run: terraform plan -var-file=terraform.tfvars

  deploy: 
    name: apply
    runs-on: ubuntu-latest
    environment: 'deploy'
    needs: plan

    steps: 
      - name: checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract Region from Input
        id: extract-region
        run: |
          IFS='/' read -ra ADDR <<< "${{ inputs.environment }}"
          echo "Region=${ADDR[-1]}" >> $GITHUB_ENV

      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ env.Region }}
          role-to-assume: ${{ secrets.AWS_ROLE}}

      - name: Set Terraform Module Path
        id: set-module-path
        run: |
          IFS='/' read -r -a array <<< "${{ github.event.inputs.environment }}"
          module_path="${{ github.event.inputs.environment }}"
          echo "module_path=$module_path" >> $GITHUB_ENV
          cd $module_path

      - name: Terraform Init
        run: terraform init

      - name: terraform apply
        run: terraform apply -var-file=terraform.tfvars -auto-approve

