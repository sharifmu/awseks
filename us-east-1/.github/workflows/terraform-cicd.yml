name: Solution Infra Deployment

on:
  workflow_dispatch:
# or on pull_request , / release : type [published is for code ]
    inputs:
      environment:
        required: true
        type: choice
        options:
        - awseks/us-east-1

permissions:
      id-token: write
      contents: read
env:
  TF_LOG: INFO

jobs:
  plan:
    name: plan
    runs-on: ubuntu-latest
    environment: 'default'

    steps: 
      - name: checkout Repository
        uses: actions/checkout@v4
          with:
            fetch-depth: 0

      - name: Extract Region from Input
        id: extract-region
        run: |
          IFS='/' read -ra ADDR <<< "${{ github.event.inputs.environment }}"
          echo "Region=${ADDR[-1]}" >> $GITHUB_ENV

      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ env.Region}}
          role-to-assume: arn:aws:iam::941374747598:role/DevOps

      - name: terraform plan
        run: |
          IFS= '/' read -r -a array <<< "${{ inputs.environment }}"
          module_path="${{ inputs.environment }}"
          cd $module_path
 #         terraform init
#        terraform fmt
          terraform plan -var-file=terraform.tfvars
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}


  deploy: 
    name: apply
    runs-on: ubuntu-latest
    environment: 'deploy'
    needs: plan

    steps: 
      - name: checkout Repository
        uses: actions/checkout@v4
          with:
            fetch-depth: 0

      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::941374747598:role/DevOps
          
      - name: terraform apply
        run: |
          IFS= '/' read -r -a array <<< "${{ inputs.environment }}"
          module_path="${{ inputs.environment }}"
          cd $module_path
#          region="${{array[4]}}"
          terraform init
          terraform fmt
          terraform apply -var-file=terraform.tfvars -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
